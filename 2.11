a.
public class acad { 	 
public static void main(String[] args) {
int a=1;
int b=2;
System.out.println(a+b); 
}
}

b.
import java.util.*;
public class acad { 	 
public static void main(String[] args) {
Scanner sc=new Scanner(System.in);
int a=sc.nextInt();
int b=sc.nextInt();
System.out.println(a+b); 	 
} 	 
}

c.
import java.util.*;
public class acad {
static int sum(int a,int b)
{
return a+b;
}
public static void main(String[] args) {
Scanner sc=new Scanner(System.in);
System.out.print("First number is:");
int a=sc.nextInt();
System.out.print("Second number is:");
int b=sc.nextInt();
System.out.println("Sum is:"+sum(a,b)); 	 
} 	 
}

d.
import java.util.*;
public class acad { 	 
public static void main(String[] args) {
Scanner sc=new Scanner(System.in);
System.out.print("First number is:");
int a=sc.nextInt();
System.out.print("Second number is:");
int b=sc.nextInt();
for(int i=a+1;i<b;i++)
{
System.out.println(i);
}
} 	 
}

e.
import java.util.*;
public class acad { 	 
public static void main(String[] args) {
Scanner sc=new Scanner(System.in);
int a=sc.nextInt(); 	 
for(int i=1;i<11;i++)
{
System.out.println(a+"x"+i+"="+(a*i));
}
} 	 
}


f.
import java.util.*;
public class acad {
static int sum(int a,int b)
{
return a+b;
}
static int sum(int a,int b,int c)
{
return a+b+c;
} 	 	 
public static void main(String[] args) {
Scanner sc=new Scanner(System.in);
System.out.print("First number is:");
int a=sc.nextInt();
System.out.print("Second number is:");
int b=sc.nextInt();
System.out.print("Third number is:");
int c=sc.nextInt();
System.out.println("Sum is:"+sum(a,b,c)); 	 
} 	 
}

g.
Yes, we can overload the method with same return type. In prevoius question i overloaded "sum" method with different number
of inputs but the return type is int. It can be different return type or same return type.


h.
import java.util.*;
public class acad { 	  	  	 
public static void main(String[] args) {
Scanner sc=new Scanner(System.in);
int n=sc.nextInt();
int[] a=new int[n];
int[] b=new int[n];
for(int i=0;i<n;i++)
{
a[i]=sc.nextInt();
}
Arrays.sort(a);
for(int i=0;i<n;i++)
{ 
b[i]=a[n-i-1];
}
for(int i=0;i<n;i++)
{
System.out.println(b[i]);
}
}
